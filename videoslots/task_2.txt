Test Case #1 
Testing a function that indentifies multipliers.

Objective: Verify function whether it finds correct miltipliers of number either 4 or 6 (or both).

Test data: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    Using Equivalence partitioning and Boundary values analisys test design techniques.
    This range represents necessary test data, because all next ranges of numbers, starting from 16 are repitative,
    means have got 4^n and 6^n multipliers.

Test steps:
    Take test data and set as argument for the function.
    Recieve the actual result in the console.

Expected Result: [0, 4, 6, 8, 12].    


Test Case #2 
Testing a function that verifies whether a string is palyndrome.

Objective: Verify function whether it identifies correctly string palindrome.

Test data: ['a', 'aa', 'ab', 'aba', 'aab', 'baa']
    Using Equivalence partitioning and Boundary values analisys test design techniques.

Test steps:
    Take each string from data set and pass as argument to the function.
    Recieve the actual result (boolean) in the console.
    

Expected Result: 'a' - true,
                 'aa' - true,
                 'ab' - false,
                 'aba' - true,
                 'aab' - false,
                 'baa' - false. 
